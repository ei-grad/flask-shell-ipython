name: Release

on:
  push:
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
    - name: Install build
      run: pip install build
    - name: Build distribution
      run: python -m build .
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
  test:
    name: Run tests
    needs: build
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13.0-rc.1"]
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        exclude:
          # no 3.7 on arm64 macos
          - os: macos-latest
            python-version: "3.7"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Install wheel
      shell: bash
      run: pip install dist/*.whl
    - name: Make it use package from wheel
      shell: bash
      run: rm flask_shell_ipython.py
    - name: Install test requirements
      run: pip install -r requirements-test.txt
    - name: Test
      if: runner.os != 'Windows'
      run: pytest --forked
    - name: Test (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: pytest --collect-only -q | grep ^test_ | while read testname; do pytest -q $testname; done
  pypi-publish-test:
    name: Release on Test PyPI
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: Test PyPI
      url: "https://test.pypi.org/project/flask-shell-ipython/"
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: "https://test.pypi.org/legacy/"
          attestations: true
  pypi-publish:
    name: Release on PyPI
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: "https://pypi.org/project/flask-shell-ipython/"
    permissions:
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
